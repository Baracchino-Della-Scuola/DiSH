# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  bump_version: 
    runs-on: ubuntu-latest
    steps:
      
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4.2.0
      - name: Setup packages
        run: python -m pip install -U commitizen
      - name: List tags
        run: git tag --list
      - name: Bump version
        run: cz bump
      - name: Generate changelog
        run: cz changelog
      - name: Commit and push
        if: startsWith(github.event.head_commit.message, 'Bumped') != true
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@users.noreply.github.com'          
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git remote -v
          git branch
          git status
          git commit -am "Bumped version!"
          git push --force-origin

          
        
  
  # This workflow contains a single job called "build"
  build:
    needs: ["bump_version"]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4.2.0
      
  
      # Runs a single command using the runners shell
      - name: Setup ENV
        run: export SHELL="/bin/bash"
      - name: List files
        run: ls
      
      - name: Setup packages
        run: python -m pip install -r requirements.txt

      # Runs a set of commands using the runners shell
      - name: Package with PyInstaller
        run: |
          echo "python build.py" | bash
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: "DiSH-${{ runner.os }}"
          path: "dist/DiSH*"
  deploy:
    runs-on: ubuntu-latest
     
    needs: ["build"]
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifact (Linux)
        uses: actions/download-artifact@v3.0.0
        with:
          name: DiSH-Linux
      - name: Download build artifact (Windows)
        uses: actions/download-artifact@v3.0.0
        with:
          name: DiSH-Windows
      - name: Get short hash
        run: 'echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV'
      - name: Create Relese
        if: startsWith(github.event.head_commit.message, 'Bumped') != true
        uses: ncipollo/release-action@v1.10.0
        with:
          artifacts: "DiSH-*"
          tag: "v${{ env.GITHUB_SHA_SHORT }}"
          name: "DiSH-${{ env.GITHUB_SHA_SHORT }}"
      
      
  
