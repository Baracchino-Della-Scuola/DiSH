# This is a basic workflow to help you get started with Actions

name: Build
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          fetch-depth: 0
          
      - name: Setup Python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: '3.11'
          cache: 'pip'
  
      # Runs a single command using the runners shell
      - name: Setup ENV
        run: export SHELL="/bin/bash"
      - name: List files
        run: ls
      - name: Install additonal deps
        if: runner.os == 'Linux'
        run: sudo apt-get install -y python3-dev libasound2-dev
      - name: Setup packages
        run: python -m pip install -r requirements.txt
      - name: Bump
        if: endsWith(github.event.head_commit.message, ' !') 
        run: |
          python -m  pip install -U Commitizen
          cz bump --files-only
          export VER=$(python version_exporter.py)
          echo "Bumped to version $VER"
          sed s/nightly/$VER/ setup.bat > setup.tmp
          rm setup.bat
          mv setup.tmp setup.bat
          echo "Replacing on delete.bat file"
          sed s/nightly/$VER/ delete.bat > delete.tmp
          rm delete.bat
          mv delete.tmp delete.bat
      # Runs a set of commands using the runners shell
      - name: Package with PyInstaller
        run: |
          echo "python build.py" | bash
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: "DiSH-${{ runner.os }}"
          path: "DiSH-*.zip"